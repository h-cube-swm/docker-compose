version: '3.0'
services:
  # Reverse proxy를 구현하는 NGINX 서버
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - /srv/nginx/certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    ports:
      - 80:80
      - 443:443

  # Let's encrypt 자동화 컨테이너
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt
    depends_on:
      - nginx-proxy
    volumes:
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam:ro
      - acme:/etc/acme.sh
      - /srv/nginx/certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - DEFAULT_EMAIL=unknownpgr@gmail.com
      - NGINX_PROXY_CONTAINER=nginx-proxy

  # 데이터베이스 서버
  db:
    image: mysql:8.0
    volumes:
      - /srv/server-db/mysql:/var/lib/mysql

  # 데이터베이스 대시보드
  phpmyadmin:
    image: phpmyadmin
    restart: always
    expose:
      - 80
    environment:
      - PMA_ARBITRARY=1
      - VIRTUAL_HOST=db.h-cu.be
      - LETSENCRYPT_HOST=db.h-cu.be

  # 프론트엔드 서버
  frontend:
    image: node:14
    environment:
      - VIRTUAL_HOST=h-cu.be
      - LETSENCRYPT_HOST=h-cu.be
    volumes:
      - /srv/server-frontend/src:/app
    working_dir: /app
    entrypoint: ["yarn", "start"]
    expose:
      - 3000
    tty: true
    stdin_open: true 
    restart: always

volumes:
  conf:
  vhost:
  html:
  dhparam:
  acme: